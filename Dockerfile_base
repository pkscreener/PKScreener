# """
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the "Software"), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """
# docker buildx build --push --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --tag pkjmesra/pkscreener:latest -f ./Dockerfile_base . --no-cache
# docker buildx build --push --platform linux/arm64/v8,linux/amd64 --tag pkjmesra/pkscreener:latest -f ./Dockerfile_base . --no-cache

FROM python:3.12.8-slim as base
ARG TARGETPLATFORM
ARG TARGETARCH
ARG TARGETVARIANT
ENV PYTHONUNBUFFERED 1
RUN printf "I'm building for TARGETPLATFORM=${TARGETPLATFORM}" \
    && printf ", TARGETARCH=${TARGETARCH}" \
    && printf ", TARGETVARIANT=${TARGETVARIANT} \n" \
    && printf "With uname -s : " && uname -s \
    && printf "and  uname -m : " && uname -m

RUN apt-get install -y apt-transport-https
RUN apt-get -y update && apt-get upgrade -y

RUN apt-get install -y gcc curl make build-essential wget unzip tar pkg-config libhdf5-serial-dev

ENV LANG C.UTF-8

RUN wget https://github.com/pkjmesra/PKScreener/archive/refs/heads/main.zip && unzip main.zip
WORKDIR /PKScreener-main

RUN pip3 install --upgrade pip

RUN wget https://raw.githubusercontent.com/pkjmesra/PKScreener/main/.github/dependencies/ta-lib_0.6.4_${TARGETARCH}.deb && \
  dpkg -i ta-lib_0.6.4_${TARGETARCH}.deb && \
  pip3 install setuptools cmake numpy

RUN rm -rf main.zip
RUN pip3 install ta-lib==0.6.0

COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt
RUN pip3 install --no-deps advanced-ta
RUN pip3 install .
RUN wget https://raw.githubusercontent.com/pkjmesra/PKScreener/main/pkscreener/courbd.ttf && \
  cp courbd.ttf /usr/local/share/fonts/courbd.ttf
RUN export TERM=xterm
COPY cve-fixes.txt .
RUN pip3 install -r cve-fixes.txt
ENV PKSCREENER_DOCKER=1

# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
ENTRYPOINT ["python3","pkscreener/pkscreenercli.py"]
# Run with 
# docker run -it pkjmesra/pkscreener:latest
